apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'jacoco'
apply plugin: 'signing'
apply from: 'config.gradle'

group "${config.organization.slug}.${config.project.group}"
version config.project.version

sourceCompatibility = config.project.jvm
targetCompatibility = config.project.jvm

task wrapper(type: Wrapper) {
  gradleVersion = '3.4.1'
  distributionUrl = "https://services.gradle.org/distributions/gradle-$gradleVersion-all.zip"
}

task sourceJar(type: Jar, dependsOn: classes) {
  classifier = 'sources'
  from sourceSets.main.allSource
}

task javadoc(overwrite: true, type: Javadoc) {
  source = sourceSets.main.allJava
  destinationDir = file("${project.projectDir}/docs/")
}

task javadocJar(type: Jar, dependsOn: javadoc) {
  classifier = 'javadoc'
  from javadoc.destinationDir
}

/*
 * JaCoCo Configuration
 */
jacoco {
  toolVersion = "0.7.8"
  reportsDir = file("${buildDir}/reports/jacoco")
}

jacocoTestReport {
  reports {
    xml.enabled true
    html.enabled false
  }
}

artifacts {
  archives jar
  archives sourceJar
  archives javadocJar
}

signing {
  sign configurations.archives
}

repositories {
  mavenCentral()
}

configurations {
  asciidoctor
}

dependencies {
  compile(
    [ group:   'io.vulpine.lib',
      name:    'logging',
      version: '0.2.0' ],
    [ group:   'org.apache.poi',
      name:    'poi',
      version: '3.15' ],
    [ group:   'org.apache.poi',
      name:    'poi-ooxml',
      version: '3.15' ]
  )

  asciidoctor(
    [ group:   'org.asciidoctor',
      name:    'asciidoclet',
      version: '0.1.3' ]
  )

}

javadoc {
  source = sourceSets.main.allJava
  options {
    tags = ["chainable"]
    doclet = 'org.asciidoctor.Asciidoclet'
    docletpath = configurations.asciidoctor.files as List
  }
}

uploadArchives {

  repositories {
    mavenDeployer {
      beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

      repository( url: 'https://oss.sonatype.org/service/local/staging/deploy/maven2/' ) {
        authentication( userName: OSSRH_USERNAME, password: OSSRH_PASSWORD )
      }

//      repository( url: 'https://oss.sonatype.org/content/repositories/snapshots/' ) {
//        authentication( userName: config.credentials.username, password: config.credentials.password )
//      }

      pom.project {
        name "${config.organization.slug}.${config.project.group}:${config.project.name}"
        packaging 'jar'
        description config.project.description
        url config.project.site

        inceptionYear '2017'

        organization {
          name config.organization.title
          url config.organization.site
        }

        issueManagement {
          system 'Issue Tracker'
          url config.project.tracker
        }

        ciManagement {
          system 'Travis CI'
          url "https://travis-ci.org/${config.organization.key}"
        }

        scm {
          connection "scm:git:${config.project.vcs}"
          developerConnection "scm:git:${config.project.vcs}"
          tag 'master'
          url config.project.site
        }

        licenses {
          license {
            name config.license.name
            url config.license.url
            distribution 'repo'
          }
        }

        developers {
          developer {
            id config.developer.user
            name config.developer.name
            email config.developer.email
          }
        }
      }
    }
  }
}
